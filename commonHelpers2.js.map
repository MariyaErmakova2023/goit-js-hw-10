{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//=======================================================\n\nfunction createPromise(delay, status) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (status) {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\n//======================================================\nconst refs = {\n  delayField: document.querySelector('input[name=\"delay\"]'),\n  createBtn: document.querySelector('button[type=\"submit\"]'),\n};\n// console.log(refs);\n\nrefs.createBtn.addEventListener('click', event => {\n  event.preventDefault();\n  try {\n    const selectedInput = document.querySelector('input[name=\"state\"]:checked');\n    if (refs.delayField.value === '') {\n      iziToast.show({\n        position: 'topRight',\n        backgroundColor: '#ffa000',\n        messageColor: 'white',\n        titleColor: 'white',\n        closeOnClick: true,\n        iconColor: 'white',\n        displayMode: '2',\n        title: 'Caution ',\n        message: 'You must set Delay',\n      });\n    } else {\n      createPromise(refs.delayField.value, selectedInput.value === 'fulfilled')\n        .then(state => onFulfilled(state))\n        .catch(state => onRejected(state));\n    }\n    selectedInput.checked = false;\n  } catch (err) {\n    iziToast.show({\n      position: 'topRight',\n      backgroundColor: '#ffa000',\n      messageColor: 'white',\n      titleColor: 'white',\n      closeOnClick: true,\n      iconColor: 'white',\n      displayMode: '2',\n      title: 'Caution ',\n      message: 'You must choose State',\n    });\n  }\n\n  refs.delayField.value = '';\n});\n\nfunction onFulfilled(delay) {\n  iziToast.show({\n    position: 'topRight',\n    backgroundColor: '#59a10d',\n    messageColor: 'white',\n    titleColor: 'white',\n    closeOnClick: true,\n    iconColor: 'white',\n    displayMode: '2',\n    title: 'OK ',\n    message: `✅ Fulfilled promise in ${delay}ms`,\n  });\n}\n\nfunction onRejected(delay) {\n  iziToast.show({\n    position: 'topRight',\n    backgroundColor: '#ef4040',\n    messageColor: 'white',\n    titleColor: 'white',\n    closeOnClick: true,\n    iconColor: 'white',\n    displayMode: '2',\n    title: 'Error ',\n    message: `❌ Rejected promise in ${delay}ms`,\n  });\n}\n"],"names":["createPromise","delay","status","resolve","reject","refs","event","selectedInput","iziToast","state","onFulfilled","onRejected"],"mappings":"oGAKA,SAASA,EAAcC,EAAOC,EAAQ,CAWpC,OAVgB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,EACFC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,CAGH,CAGA,MAAMI,EAAO,CACX,WAAY,SAAS,cAAc,qBAAqB,EACxD,UAAW,SAAS,cAAc,uBAAuB,CAC3D,EAGAA,EAAK,UAAU,iBAAiB,QAASC,GAAS,CAChDA,EAAM,eAAc,EACpB,GAAI,CACF,MAAMC,EAAgB,SAAS,cAAc,6BAA6B,EACtEF,EAAK,WAAW,QAAU,GAC5BG,EAAS,KAAK,CACZ,SAAU,WACV,gBAAiB,UACjB,aAAc,QACd,WAAY,QACZ,aAAc,GACd,UAAW,QACX,YAAa,IACb,MAAO,WACP,QAAS,oBACjB,CAAO,EAEDR,EAAcK,EAAK,WAAW,MAAOE,EAAc,QAAU,WAAW,EACrE,KAAKE,GAASC,EAAYD,CAAK,CAAC,EAChC,MAAMA,GAASE,EAAWF,CAAK,CAAC,EAErCF,EAAc,QAAU,EACzB,MAAa,CACZC,EAAS,KAAK,CACZ,SAAU,WACV,gBAAiB,UACjB,aAAc,QACd,WAAY,QACZ,aAAc,GACd,UAAW,QACX,YAAa,IACb,MAAO,WACP,QAAS,uBACf,CAAK,CACF,CAEDH,EAAK,WAAW,MAAQ,EAC1B,CAAC,EAED,SAASK,EAAYT,EAAO,CAC1BO,EAAS,KAAK,CACZ,SAAU,WACV,gBAAiB,UACjB,aAAc,QACd,WAAY,QACZ,aAAc,GACd,UAAW,QACX,YAAa,IACb,MAAO,MACP,QAAS,0BAA0BP,CAAK,IAC5C,CAAG,CACH,CAEA,SAASU,EAAWV,EAAO,CACzBO,EAAS,KAAK,CACZ,SAAU,WACV,gBAAiB,UACjB,aAAc,QACd,WAAY,QACZ,aAAc,GACd,UAAW,QACX,YAAa,IACb,MAAO,SACP,QAAS,yBAAyBP,CAAK,IAC3C,CAAG,CACH"}